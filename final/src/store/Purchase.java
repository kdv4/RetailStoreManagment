package store;

import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import static store.Acmaster.countIntegers;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Tanisha
 */
public class Purchase extends javax.swing.JFrame {
    public int index=1;
    public int[] array=new int[20];
    public int ArraInd=0;
    public int TableIndex=2;
    /**
     * Creates new form Purchase        
     */
    public Purchase() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
     Map<String,Integer> map = new HashMap();
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("warehouse?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        inventory_1Query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT i FROM Inventory_1 i");
        invoiceno = new javax.swing.JLabel();
        inno = new javax.swing.JTextField();
        buyerid = new javax.swing.JLabel();
        Bname = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Addre = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        BtnOk = new javax.swing.JButton();
        DateChooser = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        Cno = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Product Name" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        invoiceno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        invoiceno.setText("Invoice Number");
        getContentPane().add(invoiceno, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 160, 199, 25));

        inno.setText("0");
        getContentPane().add(inno, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 200, 199, -1));

        buyerid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buyerid.setText("Buyer Name");
        getContentPane().add(buyerid, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, 199, -1));

        Bname.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Buyer Name" }));
        Bname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                BnameItemStateChanged(evt);
            }
        });
        Bname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnameActionPerformed(evt);
            }
        });
        getContentPane().add(Bname, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, 190, -1));

        jLabel1.setText("Date:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 240, 50, 40));

        jLabel2.setText("Address");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, 190, 26));

        jLabel3.setText("Contact Number: ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 300, -1, 26));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Delete_20px.png"))); // NOI18N
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 0, 20, 20));
        getContentPane().add(Addre, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, 211, 64));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1), null, null, null}
            },
            new String [] {
                "Sr No.", "Product", "Qty", "Purchase Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                tableComponentAdded(evt);
            }
        });
        table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(jComboBox1));
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 370, 740, 92));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 460, -1, -1));

        BtnOk.setText("OK");
        BtnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnOkActionPerformed(evt);
            }
        });
        getContentPane().add(BtnOk, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 510, -1, -1));
        getContentPane().add(DateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 250, 180, -1));

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/miniproject1/Images/Undo_35px.png"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 430, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 540));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 770, -1));

        jLabel4.setFont(new java.awt.Font("Imprint MT Shadow", 1, 72)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Purchase");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 390, 80));
        jPanel1.add(Cno, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 300, 199, 29));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 770, 540));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public class ComboBoxTableCellRenderer extends JComboBox implements TableCellRenderer {

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        setSelectedItem(value);
        return this;
    }

}

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        jdbc j = new jdbc();
        jdbc a=new jdbc();
        String query,query1;
        DefaultTableModel tab = (DefaultTableModel) table.getModel();
       Date date = new Date();
  
      DateChooser.setDate(date);
        
       
        while(jComboBox1.getItemCount()-1>0)
        {
            jComboBox1.removeItemAt(1);
        }
         while(Bname.getItemCount()-1>0)
        {
            jComboBox1.removeItemAt(1);
        }
        query="select Name from ac_detail a,ac_type b where a.acid=b.acid and b.actype='Seller'";
        query1="select pname from inventory group by pname ASC";
        try
        {
              j.stmt=j.con.prepareStatement(query);
              j.rs=j.stmt.executeQuery(query);
     
              a.stmt=a.con.prepareStatement(query1);
              a.rs=a.stmt.executeQuery();
              

        while(j.rs.next())
        {
             Bname.addItem(j.rs.getString("Name"));
             
        }
        while(a.rs.next())
        {
            jComboBox1.addItem(a.rs.getString("pname"));
        }

        }
        catch(Exception e)
                {
                System.out.println("Error in Window open"+e);
                }
        
      
    }//GEN-LAST:event_formWindowOpened

    private void BnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_BnameItemStateChanged
        // TODO add your handling code here:
        jdbc a=new jdbc();
        String query,key;
        key=(String) Bname.getSelectedItem();
        
        try
        {
            query="select * from ac_detail where Name='"+key+"'";
            a.stmt=a.con.prepareStatement(query);
            a.rs=a.stmt.executeQuery(query);
            
            while(a.rs.next())
            {
                Cno.setText(a.rs.getString("contact"));
                Addre.setText(a.rs.getString("Address"));
                index=a.rs.getInt("ACId");
            }
        }
        catch(Exception e)
                {
                    System.out.println("Error in Bname"+e);
                }
    }//GEN-LAST:event_BnameItemStateChanged

    private void tableComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tableComponentAdded
        // TODO add your handling code here:
       
    }//GEN-LAST:event_tableComponentAdded

    private void BnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BnameActionPerformed

    private void tableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyPressed
        // TOD
        
        jdbc c = new jdbc();
        String query4,itemName;
        int itemCode;
        int row;
        row=table.getRowCount();
        
        if (evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER) 
        {
            itemName = String.valueOf(jComboBox1.getSelectedItem());
                
            try
            {
                 query4="select Item_code from inventory where pname like '"+itemName+"'";
                  
                 c.st=c.con.createStatement();
                 c.rs=c.st.executeQuery(query4);
                if(c.rs.next())
                 {
                      System.out.println("Item Code in select menu::::"+c.rs.getInt("Item_code"));
                      array[ArraInd] = c.rs.getInt("Item_code");
                      ArraInd++;
                       
                 }
                DefaultTableModel model = (DefaultTableModel) table.getModel();
                
                model.addRow(new Object[]{"", "", ""});
                table.setValueAt(TableIndex, row, 0);
                TableIndex++;
         
            }
         
              
         catch(Exception e)
                 {
                     JOptionPane.showMessageDialog(null, e);
                 }
        }		
    }//GEN-LAST:event_tableKeyPressed

    public static int countIntegers(String input) { 
    int count = 0;
    for (int i = 0; i < input.length(); i++) {
        if (Character.isDigit(input.charAt(i))) {
            count++;
        }
    }
    return count;
    }
    
    private void BtnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnOkActionPerformed
        // TODO add your handling code here:
        jdbc a = new jdbc();
        jdbc b = new jdbc();
        jdbc c=new jdbc();
        String Query,Query1,Query2;
        int bill=0,rowcnt=0,count=0;
        DefaultTableModel model=(DefaultTableModel)table.getModel();
        int i=0;
        System.out.println("inno"+inno.getText());
        int invo=Integer.parseInt(inno.getText());
        count=countIntegers(String.valueOf(invo));
        
       
       
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        if(DateChooser == null)
        {
           DateChooser = new com.toedter.calendar.JDateChooser();
        }
        String sd = dateFormat.format(DateChooser.getDate());
        System.out.println("sd:"+sd);
        
        
        try
        {
            
            Query1="insert buying_purchase_detail values(?,?,?,?)";
            b.stmt=b.con.prepareStatement(Query1);
            b.stmt.setString(1, null);
            b.stmt.setInt(2, index);
            b.stmt.setString(3,sd);
            b.stmt.setInt(4, invo);
            b.stmt.executeUpdate();
          
                  
            Query2="select max(Purchase_no) as max from buying_purchase_detail";
            b.stmt=b.con.prepareStatement(Query2);
            b.rs=b.stmt.executeQuery();
            if(b.rs.next())
            {
                 bill=b.rs.getInt("max");
                 System.out.println(bill);
            }
            
            Query="insert buying_purchase_item_detail values(?,?,?,?,?)";
            a.stmt=a.con.prepareStatement(Query);
            
             System.out.println("Outside While Ok");
            while(i<(table.getRowCount()-1))
            {
                System.out.println("Inside While Ok"+jComboBox1.getSelectedItem());
             
                String itemName = String.valueOf(jComboBox1.getSelectedItem());
                System.out.println("Item Name"+itemName);
               
                String query4;
                int itemCode=0;
 
                if(itemName!=null && !itemName.equals(""))
                {
                  System.out.println("Entered in Name Query");    
                }
           
                System.out.println("itemCode::::::::::::::::::"+itemCode);
                a.stmt.setString(1, null);
                a.stmt.setInt(2, bill);
                a.stmt.setInt(3, array[i]);
                a.stmt.setInt(4, Integer.parseInt(String.valueOf(table.getValueAt(i, 2))));
                System.out.println("Tables Value::"+Integer.parseInt(String.valueOf(table.getValueAt(i, 2))));
                a.stmt.setFloat(5, Float.parseFloat(String.valueOf(table.getValueAt(i, 3))));
                
                i++;
                int j=a.stmt.executeUpdate();
               if(j>0)
               {
                   rowcnt++;
                   if(rowcnt>=table.getRowCount()-1)
                   {
                       JOptionPane.showMessageDialog(null, "Data saved");
                   }
               }
               else
               {
                   JOptionPane.showMessageDialog(null, "Error in saving");
               }
            } 
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Erro in saving:"+e);
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_BtnOkActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
       /* int row=table.getSelectedRow();
        jdbc a=new jdbc();
        String query;
        String key=(String)jComboBox1.getSelectedItem();
        System.out.println(key);
        try
        {
            query="select Item_code from inventory where pname like '"+key+"'";
            a.st=a.con.createStatement();
            a.st.executeQuery(query);
            if(a.rs.next())
            {
                System.out.println("Item Code in select menu"+a.rs.getInt("Item_code"));
                table.setValueAt(a.rs.getInt("Item_code"), row, 2);
            }
        }
        catch(Exception e)
        {
            //JOptionPane.showMessageDialog(null, e);
            e.printStackTrace();
        }*/
        
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        this.hide();
        Home frm=new Home();
        frm.setVisible(true);
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
       this.dispose();
    }//GEN-LAST:event_jLabel12MouseClicked

  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Purchase().setVisible(true);
            }
        });
    }

    public class Item{
        
    private int id;
    private String description;
    
 @Override
  public String toString() {
    return description;
  }
  public Item(int id, String description) {
    this.id = id;
    this.description = description;
  }

  public int getId() {
    return id;
  }

  public String getDescription() {
    return description;
  }

 
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Addre;
    private javax.swing.JComboBox<String> Bname;
    private javax.swing.JButton BtnOk;
    private javax.swing.JLabel Cno;
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JLabel buyerid;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JTextField inno;
    private javax.persistence.Query inventory_1Query;
    private javax.swing.JLabel invoiceno;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
